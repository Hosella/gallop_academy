{"mappings":"AAAA,YAAY;AACZ,IAAI,aAAa;AACjB,WAAW;AAEX,SAAS,WAAW,CAAC;IACnB,WAAW,cAAc;AAC3B;AAEA,SAAS,aAAa,CAAC;IACrB,WAAW,aAAa;AAC1B;AAEA,SAAS,WAAW,CAAC;IACnB,IAAI;IACJ,IAAI,SAAS,SAAS,sBAAsB,CAAC;IAC7C,IAAI,OAAO,SAAS,sBAAsB,CAAC;IAC3C,IAAI,IAAI,OAAO,MAAM,EAAG,aAAa;IACrC,IAAI,IAAI,GAAI,aAAa,OAAO,MAAM;IACtC,IAAK,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAC7B,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG;IAE5B,IAAK,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAC3B,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW;IAE3D,MAAM,CAAC,aAAW,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG;IACrC,IAAI,CAAC,aAAW,EAAE,CAAC,SAAS,IAAI;AAClC;AAEA,UAAU;AACV,MAAM,UAAU,SAAS,cAAc,CAAC;AACxC,MAAM,OAAO,SAAS,cAAc,CAAC;AACrC,MAAM,WAAW,SAAS,cAAc,CAAC;AACzC,MAAM,OAAO,SAAS,cAAc,CAAC;AAErC,MAAM,aAAa;IACjB,MAAM,WAAW,KAAK,OAAO,CAAC;IAC9B,IAAI,UAAU;QACZ,KAAK,SAAS,CAAC,MAAM,CAAC;QACtB,SAAS,SAAS,CAAC,MAAM,CAAC;QAC1B,KAAK,SAAS,CAAC,MAAM,CAAC;IACxB,OAAO;QACL,KAAK,SAAS,CAAC,GAAG,CAAC;QACnB,SAAS,SAAS,CAAC,GAAG,CAAC;QACvB,KAAK,SAAS,CAAC,GAAG,CAAC;IACrB;AACF;AACA,QAAQ,gBAAgB,CAAC,SAAS;AAElC,MAAM,QAAQ,SAAS,gBAAgB,CAAC,kBAAkB,EAAE;AAC5D,OAAO,QAAQ,CAAC;IACd,KAAK,gBAAgB,CAAC,SAAS;QAC7B,KAAK,SAAS,CAAC,MAAM,CAAC;QACtB,KAAK,SAAS,CAAC,MAAM,CAAC;QACtB,SAAS,SAAS,CAAC,MAAM,CAAC;IAC5B;AACF;AAEA,MAAM,OAAO,SAAS,cAAc,CAAC;AACrC,KAAK,gBAAgB,CAAC,SAAS;IAC7B,KAAK,SAAS,CAAC,MAAM,CAAC;IACtB,KAAK,SAAS,CAAC,MAAM,CAAC;IACtB,SAAS,SAAS,CAAC,MAAM,CAAC;AAC5B;AAEA,kBAAkB;AAClB,MAAM,SAAS,SAAS,gBAAgB,CAAC;AAEzC,MAAM,UAAU;IACd,MAAM;IACN,YAAY;IACZ,WAAW;AACb;AAEA,MAAM,qBAAqB,CAAC;IAC1B,QAAQ,OAAO,CAAC,CAAA;QACd,MAAM,EAAC,SAAS,EAAC,GAAG,MAAM,MAAM;QAChC,IAAI,CAAC,WACH;QAEF,QAAQ,GAAG,CAAC;QACZ,IAAI,MAAM,cAAc,EAAE;YACxB,MAAM,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG;YAC7B,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG;QAC3B,OAAO;YACL,MAAM,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG;YAC7B,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,UAAU,QAAQ,CAAC,iBAAiB,UAAS;QACxE;IACF;AACF;AAEA,MAAM,WAAW,IAAI,qBAAqB,oBAAoB;AAE9D,OAAO,OAAO,CAAC,CAAA;IACb,SAAS,OAAO,CAAC;AACnB","sources":["src/script/main.js"],"sourcesContent":["// slideshow\nlet slideIndex = 1;\nshowSlides(slideIndex);\n\nfunction plusSlides(n) {\n  showSlides(slideIndex += n);\n}\n\nfunction currentSlide(n) {\n  showSlides(slideIndex = n);\n}\n\nfunction showSlides(n) {\n  let i;\n  let slides = document.getElementsByClassName(\"slide\");\n  let dots = document.getElementsByClassName(\"dot\");\n  if (n > slides.length) {slideIndex = 1};\n  if (n < 1) {slideIndex = slides.length}\n  for (i = 0; i < slides.length; i++) {\n    slides[i].style.display = \"none\";\n  }\n  for (i = 0; i < dots.length; i++) {\n    dots[i].className = dots[i].className.replace(\" active\", \"\");\n  }\n  slides[slideIndex-1].style.display = \"block\";\n  dots[slideIndex-1].className += \" active\";\n}\n\n//btn menu\nconst bntMenu = document.getElementById('top__icon');\nconst body = document.getElementById('body');\nconst nav_icon = document.getElementById('top__icon');\nconst menu = document.getElementById('menu');\n\nconst handleMenu = () => {\n  const isHidden = body.matches('.body-hidden');\n  if (isHidden) {\n    body.classList.remove('body-hidden');\n    nav_icon.classList.remove('open');\n    menu.classList.remove('page__menu--open');\n  } else {\n    body.classList.add('body-hidden');\n    nav_icon.classList.add('open');\n    menu.classList.add('page__menu--open');\n  }\n};\nbntMenu.addEventListener('click', handleMenu);\n\nconst links = document.querySelectorAll('.menu__link') || [];\nlinks?.forEach((link) => {\n  link.addEventListener('click', () => {\n    body.classList.remove('body-hidden');\n    menu.classList.remove('page__menu--open');\n    nav_icon.classList.remove('open');\n  })\n});\n\nconst logo = document.getElementById('logo');\nlogo.addEventListener('click', () => {\n  body.classList.remove('body-hidden');\n  menu.classList.remove('page__menu--open');\n  nav_icon.classList.remove('open');\n})\n\n// animation block\nconst blocks = document.querySelectorAll('.block');\n\nconst options = {\n  root: null,\n  rootMargin: '0px',\n  threshold: 0.1\n};\n\nconst handleIntersection = (entries) => {\n  entries.forEach(entry => {\n    const {classList} = entry.target;\n    if (!classList) {\n      return;\n    }\n    console.log(classList)\n    if (entry.isIntersecting) {\n      entry.target.style.opacity = 1;\n      entry.target.style.top = 0;\n    } else {\n      entry.target.style.opacity = 0;\n      entry.target.style.top = classList.contains('block--left') ? '-40px': '40px';\n    }\n  });\n};\n\nconst observer = new IntersectionObserver(handleIntersection, options);\n\nblocks.forEach(block => {\n  observer.observe(block);\n});\n"],"names":[],"version":3,"file":"index.900caf0b.js.map","sourceRoot":"/__parcel_source_root/"}